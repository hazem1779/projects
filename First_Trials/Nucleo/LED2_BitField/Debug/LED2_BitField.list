
LED2_BitField.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000188  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800034c  08000354  00010354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800034c  0800034c  00010354  2**0
                  CONTENTS
  4 .ARM          00000000  0800034c  0800034c  00010354  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800034c  08000354  00010354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800034c  0800034c  0001034c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000350  08000350  00010350  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010354  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000354  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000354  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010354  2**0
                  CONTENTS, READONLY
 12 .debug_info   000005d8  00000000  00000000  0001037e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000013d  00000000  00000000  00010956  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000068  00000000  00000000  00010a98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000040  00000000  00000000  00010b00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000f95  00000000  00000000  00010b40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000007c0  00000000  00000000  00011ad5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003c89  00000000  00000000  00012295  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00015f1e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000098  00000000  00000000  00015f70  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000334 	.word	0x08000334

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000334 	.word	0x08000334

08000204 <delay>:
#include <stdint.h>

void delay(uint64_t ticks);

void delay(uint64_t ticks)
{
 8000204:	b4b0      	push	{r4, r5, r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	e9c7 0100 	strd	r0, r1, [r7]
	for (; ticks != 0; --ticks);
 800020e:	e006      	b.n	800021e <delay+0x1a>
 8000210:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000214:	1e54      	subs	r4, r2, #1
 8000216:	f143 35ff 	adc.w	r5, r3, #4294967295
 800021a:	e9c7 4500 	strd	r4, r5, [r7]
 800021e:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000222:	4313      	orrs	r3, r2
 8000224:	d1f4      	bne.n	8000210 <delay+0xc>
}
 8000226:	bf00      	nop
 8000228:	bf00      	nop
 800022a:	370c      	adds	r7, #12
 800022c:	46bd      	mov	sp, r7
 800022e:	bcb0      	pop	{r4, r5, r7}
 8000230:	4770      	bx	lr
	...

08000234 <main>:
#include "main.h"

void delay(uint64_t ticks);

int main(void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	b084      	sub	sp, #16
 8000238:	af00      	add	r7, sp, #0

	RCC_AHB1ENR_t volatile *const RCC_AHB1ENR_R = (RCC_AHB1ENR_t *)0x40023830;
 800023a:	4b13      	ldr	r3, [pc, #76]	; (8000288 <main+0x54>)
 800023c:	60fb      	str	r3, [r7, #12]
	RCC_AHB1ENR_R->gpioa_en = 1U;
 800023e:	68fa      	ldr	r2, [r7, #12]
 8000240:	6813      	ldr	r3, [r2, #0]
 8000242:	f043 0301 	orr.w	r3, r3, #1
 8000246:	6013      	str	r3, [r2, #0]



	GPIOx_MODE_t volatile *const GPIOA_MODE_R = (GPIOx_MODE_t*)0x40020000;
 8000248:	4b10      	ldr	r3, [pc, #64]	; (800028c <main+0x58>)
 800024a:	60bb      	str	r3, [r7, #8]
	GPIOA_MODE_R->pin_5 = 1U;
 800024c:	68ba      	ldr	r2, [r7, #8]
 800024e:	6813      	ldr	r3, [r2, #0]
 8000250:	2101      	movs	r1, #1
 8000252:	f361 238b 	bfi	r3, r1, #10, #2
 8000256:	6013      	str	r3, [r2, #0]

	GPIOx_ODR_t volatile *const GPIOA_ODR_R   =  (GPIOx_ODR_t *)0x40020014;
 8000258:	4b0d      	ldr	r3, [pc, #52]	; (8000290 <main+0x5c>)
 800025a:	607b      	str	r3, [r7, #4]

	while(1){
		GPIOA_ODR_R->pin_5 = 1U;
 800025c:	687a      	ldr	r2, [r7, #4]
 800025e:	6813      	ldr	r3, [r2, #0]
 8000260:	f043 0320 	orr.w	r3, r3, #32
 8000264:	6013      	str	r3, [r2, #0]
		delay(2*500000);
 8000266:	480b      	ldr	r0, [pc, #44]	; (8000294 <main+0x60>)
 8000268:	f04f 0100 	mov.w	r1, #0
 800026c:	f7ff ffca 	bl	8000204 <delay>
		GPIOA_ODR_R->pin_5 = 0U;
 8000270:	687a      	ldr	r2, [r7, #4]
 8000272:	6813      	ldr	r3, [r2, #0]
 8000274:	f36f 1345 	bfc	r3, #5, #1
 8000278:	6013      	str	r3, [r2, #0]
		delay(2*500000);
 800027a:	4806      	ldr	r0, [pc, #24]	; (8000294 <main+0x60>)
 800027c:	f04f 0100 	mov.w	r1, #0
 8000280:	f7ff ffc0 	bl	8000204 <delay>
		GPIOA_ODR_R->pin_5 = 1U;
 8000284:	e7ea      	b.n	800025c <main+0x28>
 8000286:	bf00      	nop
 8000288:	40023830 	.word	0x40023830
 800028c:	40020000 	.word	0x40020000
 8000290:	40020014 	.word	0x40020014
 8000294:	000f4240 	.word	0x000f4240

08000298 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000298:	480d      	ldr	r0, [pc, #52]	; (80002d0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800029a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800029c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002a0:	480c      	ldr	r0, [pc, #48]	; (80002d4 <LoopForever+0x6>)
  ldr r1, =_edata
 80002a2:	490d      	ldr	r1, [pc, #52]	; (80002d8 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002a4:	4a0d      	ldr	r2, [pc, #52]	; (80002dc <LoopForever+0xe>)
  movs r3, #0
 80002a6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002a8:	e002      	b.n	80002b0 <LoopCopyDataInit>

080002aa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002aa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002ac:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002ae:	3304      	adds	r3, #4

080002b0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002b0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002b2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002b4:	d3f9      	bcc.n	80002aa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002b6:	4a0a      	ldr	r2, [pc, #40]	; (80002e0 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002b8:	4c0a      	ldr	r4, [pc, #40]	; (80002e4 <LoopForever+0x16>)
  movs r3, #0
 80002ba:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002bc:	e001      	b.n	80002c2 <LoopFillZerobss>

080002be <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002be:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002c0:	3204      	adds	r2, #4

080002c2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002c2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002c4:	d3fb      	bcc.n	80002be <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002c6:	f000 f811 	bl	80002ec <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002ca:	f7ff ffb3 	bl	8000234 <main>

080002ce <LoopForever>:

LoopForever:
    b LoopForever
 80002ce:	e7fe      	b.n	80002ce <LoopForever>
  ldr   r0, =_estack
 80002d0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002d4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002d8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002dc:	08000354 	.word	0x08000354
  ldr r2, =_sbss
 80002e0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002e4:	2000001c 	.word	0x2000001c

080002e8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002e8:	e7fe      	b.n	80002e8 <ADC_IRQHandler>
	...

080002ec <__libc_init_array>:
 80002ec:	b570      	push	{r4, r5, r6, lr}
 80002ee:	4d0d      	ldr	r5, [pc, #52]	; (8000324 <__libc_init_array+0x38>)
 80002f0:	4c0d      	ldr	r4, [pc, #52]	; (8000328 <__libc_init_array+0x3c>)
 80002f2:	1b64      	subs	r4, r4, r5
 80002f4:	10a4      	asrs	r4, r4, #2
 80002f6:	2600      	movs	r6, #0
 80002f8:	42a6      	cmp	r6, r4
 80002fa:	d109      	bne.n	8000310 <__libc_init_array+0x24>
 80002fc:	4d0b      	ldr	r5, [pc, #44]	; (800032c <__libc_init_array+0x40>)
 80002fe:	4c0c      	ldr	r4, [pc, #48]	; (8000330 <__libc_init_array+0x44>)
 8000300:	f000 f818 	bl	8000334 <_init>
 8000304:	1b64      	subs	r4, r4, r5
 8000306:	10a4      	asrs	r4, r4, #2
 8000308:	2600      	movs	r6, #0
 800030a:	42a6      	cmp	r6, r4
 800030c:	d105      	bne.n	800031a <__libc_init_array+0x2e>
 800030e:	bd70      	pop	{r4, r5, r6, pc}
 8000310:	f855 3b04 	ldr.w	r3, [r5], #4
 8000314:	4798      	blx	r3
 8000316:	3601      	adds	r6, #1
 8000318:	e7ee      	b.n	80002f8 <__libc_init_array+0xc>
 800031a:	f855 3b04 	ldr.w	r3, [r5], #4
 800031e:	4798      	blx	r3
 8000320:	3601      	adds	r6, #1
 8000322:	e7f2      	b.n	800030a <__libc_init_array+0x1e>
 8000324:	0800034c 	.word	0x0800034c
 8000328:	0800034c 	.word	0x0800034c
 800032c:	0800034c 	.word	0x0800034c
 8000330:	08000350 	.word	0x08000350

08000334 <_init>:
 8000334:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000336:	bf00      	nop
 8000338:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800033a:	bc08      	pop	{r3}
 800033c:	469e      	mov	lr, r3
 800033e:	4770      	bx	lr

08000340 <_fini>:
 8000340:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000342:	bf00      	nop
 8000344:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000346:	bc08      	pop	{r3}
 8000348:	469e      	mov	lr, r3
 800034a:	4770      	bx	lr
